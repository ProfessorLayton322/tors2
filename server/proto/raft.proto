syntax = "proto3";

package raft;

service RaftConsensus {
  rpc RequestVote (RequestVoteRequest) returns (RequestVoteResponse) {}
  rpc AppendEntries (AppendEntriesRequest) returns (AppendEntriesResponse) {}
}


message Command {
  enum CommandType {
    Create = 0;
    Update = 1;
    Delete = 2;
    CompareSwap = 3;
  }
  CommandType command_type = 1;
  string key = 2;
  optional string value = 3;
  //for compare and swap
  optional string old_value = 4;
}

message LogEntry {
  uint64 term = 1;
  uint64 index = 2;
  Command command = 3;
}

//for easier serializetion/deserialization and failover recovery
message WriteAheadLogs {
  repeated LogEntry logs = 1;
}

message RequestVoteRequest {
  uint64 term = 1;
  uint64 candidate_id = 2;
  uint64 last_log_index = 3;
  uint64 last_log_term = 4;
}

message RequestVoteResponse {
  uint64 term = 1;
  bool vote_granted = 2;
}

message AppendEntriesRequest {
  uint64 term = 1;
  uint64 leader_id = 2;
  uint64 prev_log_index = 3;
  uint64 prev_log_term = 4;
  repeated LogEntry entries = 5;
  uint64 leader_commit = 6;
}

message AppendEntriesResponse {
  uint64 term = 1;
  bool success = 2;
}
